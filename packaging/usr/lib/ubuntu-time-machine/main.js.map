{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAa;;AAEb;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjCa;;AAEb,qBAAqB,mBAAO,CAAC,8DAAS;AACtC,kBAAkB,mBAAO,CAAC,sEAAa;;AAEvC;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,oCAAoC;;AAEnE;AACA,8BAA8B,+BAA+B;;AAE7D;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD,OAAO;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB;AACzB,wBAAwB,gDAAgD;AACxE;;AAEA,4BAA4B;AAC5B;AACA,kCAAkC,kBAAkB;AACpD,MAAM;AACN,4BAA4B,kBAAkB;AAC9C;AACA;;AAEA,4BAA4B,+BAA+B,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,mDAAmD;AACvE;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;;;;;;;;;;ACrNa;;AAEb;;AAEA;AACA;AACA,oBAAoB,2BAA2B;AAC/C,oBAAoB,6BAA6B;AACjD,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9Ba;;AAEb,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,qBAAqB,kCAAkC;AACvD;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;ACnBa;;AAEb,eAAe,mBAAO,CAAC,sEAAgB;AACvC,6BAA6B,mBAAO,CAAC,wGAA4B;AACjE,yBAAyB,mBAAO,CAAC,oGAA0B;AAC3D,qBAAqB,mBAAO,CAAC,4FAAsB;;AAEnD;AACA,qBAAqB;AACrB,yBAAsB;;AAEtB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA,cAAc,yBAAyB;AACvC,4CAA4C,OAAO;;AAEnD;AACA,2CAA2C,yBAAyB;AACpE;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,aAAa;AAC9D,KAAK;AACL,GAAG;AACH;;;;;;;;;;;ACrEa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,eAAe,IAAI;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA,sBAAsB,2CAA2C;AACjE,gBAAgB,8BAA8B;AAC9C;AACA,MAAM;AACN;AACA;AACA;;AAEA,eAAe,4CAA4C;AAC3D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB,IAAI;AAC5C;AACA;AACA;;AAEA;AACA,sBAAsB,qBAAqB;;AAE3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,yBAAyB,wBAAwB;AACjD;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,kCAAkC;AAC3D;AACA;;AAEA;;;;;;;;;;;ACjFa;;AAEb;;AAEA,QAAQ,YAAY,EAAE,mBAAO,CAAC,wGAAoC;;AAElE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,OAAO,GAAG,KAAK;AAC7C;;AAEA,cAAc,WAAW,eAAe;AACxC;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,iBAAiB,8BAA8B,4BAA4B,GAAG;AAC9E,KAAK;AACL;AACA;;AAEA;AACA;AACA,aAAa;AACb,cAAc;AACd,gBAAgB;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,SAAS,EAAE,QAAQ;AAClC;;AAEA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;AC9Fa;;AAEb,QAAQ,YAAY,EAAE,mBAAO,CAAC,wGAAoC;;AAElE;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU,yBAAyB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,EAAE,IAAI;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,sBAAsB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yCAAyC;AACjE,wBAAwB,2CAA2C;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,2CAA2C;AACjE;AACA;AACA;AACA;;;;;;;;;;;ACxIA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;+CCLA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CA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","sources":["webpack://ubuntu-time-machine/./node_modules/electron-log/src/core/Buffering.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/core/Logger.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/core/scope.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/core/transforms/transform.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/renderer/index.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/renderer/lib/RendererErrorHandler.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/renderer/lib/transports/console.js","webpack://ubuntu-time-machine/./node_modules/electron-log/src/renderer/lib/transports/ipc.js","webpack://ubuntu-time-machine/external node-commonjs \"child_process\"","webpack://ubuntu-time-machine/external node-commonjs \"electron\"","webpack://ubuntu-time-machine/external node-commonjs \"fs\"","webpack://ubuntu-time-machine/external node-commonjs \"path\"","webpack://ubuntu-time-machine/webpack/bootstrap","webpack://ubuntu-time-machine/webpack/runtime/compat get default export","webpack://ubuntu-time-machine/webpack/runtime/define property getters","webpack://ubuntu-time-machine/webpack/runtime/hasOwnProperty shorthand","webpack://ubuntu-time-machine/webpack/runtime/make namespace object","webpack://ubuntu-time-machine/./src/main/index.ts"],"sourcesContent":["'use strict';\n\nclass Buffering {\n  constructor({ processMessage }) {\n    this.processMessage = processMessage;\n    this.buffer = [];\n    this.enabled = false;\n\n    this.begin = this.begin.bind(this);\n    this.commit = this.commit.bind(this);\n    this.reject = this.reject.bind(this);\n  }\n\n  addMessage(message) {\n    this.buffer.push(message);\n  }\n\n  begin() {\n    this.enabled = [];\n  }\n\n  commit() {\n    this.enabled = false;\n    this.buffer.forEach((item) => this.processMessage(item));\n    this.buffer = [];\n  }\n\n  reject() {\n    this.enabled = false;\n    this.buffer = [];\n  }\n}\n\nmodule.exports = Buffering;\n","'use strict';\n\nconst scopeFactory = require('./scope');\nconst Buffering = require('./Buffering');\n\n/**\n * @property {Function} error\n * @property {Function} warn\n * @property {Function} info\n * @property {Function} verbose\n * @property {Function} debug\n * @property {Function} silly\n */\nclass Logger {\n  static instances = {};\n\n  dependencies = {};\n  errorHandler = null;\n  eventLogger = null;\n  functions = {};\n  hooks = [];\n  isDev = false;\n  levels = null;\n  logId = null;\n  scope = null;\n  transports = {};\n  variables = {};\n\n  constructor({\n    allowUnknownLevel = false,\n    dependencies = {},\n    errorHandler,\n    eventLogger,\n    initializeFn,\n    isDev = false,\n    levels = ['error', 'warn', 'info', 'verbose', 'debug', 'silly'],\n    logId,\n    transportFactories = {},\n    variables,\n  } = {}) {\n    this.addLevel = this.addLevel.bind(this);\n    this.create = this.create.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.logData = this.logData.bind(this);\n    this.processMessage = this.processMessage.bind(this);\n\n    this.allowUnknownLevel = allowUnknownLevel;\n    this.buffering = new Buffering(this);\n    this.dependencies = dependencies;\n    this.initializeFn = initializeFn;\n    this.isDev = isDev;\n    this.levels = levels;\n    this.logId = logId;\n    this.scope = scopeFactory(this);\n    this.transportFactories = transportFactories;\n    this.variables = variables || {};\n\n    for (const name of this.levels) {\n      this.addLevel(name, false);\n    }\n    this.log = this.info;\n    this.functions.log = this.log;\n\n    this.errorHandler = errorHandler;\n    errorHandler?.setOptions({ ...dependencies, logFn: this.error });\n\n    this.eventLogger = eventLogger;\n    eventLogger?.setOptions({ ...dependencies, logger: this });\n\n    for (const [name, factory] of Object.entries(transportFactories)) {\n      this.transports[name] = factory(this, dependencies);\n    }\n\n    Logger.instances[logId] = this;\n  }\n\n  static getInstance({ logId }) {\n    return this.instances[logId] || this.instances.default;\n  }\n\n  addLevel(level, index = this.levels.length) {\n    if (index !== false) {\n      this.levels.splice(index, 0, level);\n    }\n\n    this[level] = (...args) => this.logData(args, { level });\n    this.functions[level] = this[level];\n  }\n\n  catchErrors(options) {\n    this.processMessage(\n      {\n        data: ['log.catchErrors is deprecated. Use log.errorHandler instead'],\n        level: 'warn',\n      },\n      { transports: ['console'] },\n    );\n    return this.errorHandler.startCatching(options);\n  }\n\n  create(options) {\n    if (typeof options === 'string') {\n      options = { logId: options };\n    }\n\n    return new Logger({\n      dependencies: this.dependencies,\n      errorHandler: this.errorHandler,\n      initializeFn: this.initializeFn,\n      isDev: this.isDev,\n      transportFactories: this.transportFactories,\n      variables: { ...this.variables },\n      ...options,\n    });\n  }\n\n  compareLevels(passLevel, checkLevel, levels = this.levels) {\n    const pass = levels.indexOf(passLevel);\n    const check = levels.indexOf(checkLevel);\n\n    if (check === -1 || pass === -1) {\n      return true;\n    }\n\n    return check <= pass;\n  }\n\n  initialize(options = {}) {\n    this.initializeFn({ logger: this, ...this.dependencies, ...options });\n  }\n\n  logData(data, options = {}) {\n    if (this.buffering.enabled) {\n      this.buffering.addMessage({ data, ...options });\n    } else {\n      this.processMessage({ data, ...options });\n    }\n  }\n\n  processMessage(message, { transports = this.transports } = {}) {\n    if (message.cmd === 'errorHandler') {\n      this.errorHandler.handle(message.error, {\n        errorName: message.errorName,\n        processType: 'renderer',\n        showDialog: Boolean(message.showDialog),\n      });\n      return;\n    }\n\n    let level = message.level;\n    if (!this.allowUnknownLevel) {\n      level = this.levels.includes(message.level) ? message.level : 'info';\n    }\n\n    const normalizedMessage = {\n      date: new Date(),\n      logId: this.logId,\n      ...message,\n      level,\n      variables: {\n        ...this.variables,\n        ...message.variables,\n      },\n    };\n\n    for (const [transName, transFn] of this.transportEntries(transports)) {\n      if (typeof transFn !== 'function' || transFn.level === false) {\n        continue;\n      }\n\n      if (!this.compareLevels(transFn.level, message.level)) {\n        continue;\n      }\n\n      try {\n        // eslint-disable-next-line arrow-body-style\n        const transformedMsg = this.hooks.reduce((msg, hook) => {\n          return msg ? hook(msg, transFn, transName) : msg;\n        }, normalizedMessage);\n\n        if (transformedMsg) {\n          transFn({ ...transformedMsg, data: [...transformedMsg.data] });\n        }\n      } catch (e) {\n        this.processInternalErrorFn(e);\n      }\n    }\n  }\n\n  processInternalErrorFn(_e) {\n    // Do nothing by default\n  }\n\n  transportEntries(transports = this.transports) {\n    const transportArray = Array.isArray(transports)\n      ? transports\n      : Object.entries(transports);\n\n    return transportArray\n      .map((item) => {\n        switch (typeof item) {\n          case 'string':\n            return this.transports[item] ? [item, this.transports[item]] : null;\n          case 'function':\n            return [item.name, item];\n          default:\n            return Array.isArray(item) ? item : null;\n        }\n      })\n      .filter(Boolean);\n  }\n}\n\nmodule.exports = Logger;\n","'use strict';\n\nmodule.exports = scopeFactory;\n\nfunction scopeFactory(logger) {\n  return Object.defineProperties(scope, {\n    defaultLabel: { value: '', writable: true },\n    labelPadding: { value: true, writable: true },\n    maxLabelLength: { value: 0, writable: true },\n    labelLength: {\n      get() {\n        switch (typeof scope.labelPadding) {\n          case 'boolean': return scope.labelPadding ? scope.maxLabelLength : 0;\n          case 'number': return scope.labelPadding;\n          default: return 0;\n        }\n      },\n    },\n  });\n\n  function scope(label) {\n    scope.maxLabelLength = Math.max(scope.maxLabelLength, label.length);\n\n    const newScope = {};\n    for (const level of logger.levels) {\n      newScope[level] = (...d) => logger.logData(d, { level, scope: label });\n    }\n    newScope.log = newScope.info;\n    return newScope;\n  }\n}\n","'use strict';\n\nmodule.exports = { transform };\n\nfunction transform({\n  logger,\n  message,\n  transport,\n\n  initialData = message?.data || [],\n  transforms = transport?.transforms,\n}) {\n  return transforms.reduce((data, trans) => {\n    if (typeof trans === 'function') {\n      return trans({ data, logger, message, transport });\n    }\n\n    return data;\n  }, initialData);\n}\n","'use strict';\n\nconst Logger = require('../core/Logger');\nconst RendererErrorHandler = require('./lib/RendererErrorHandler');\nconst transportConsole = require('./lib/transports/console');\nconst transportIpc = require('./lib/transports/ipc');\n\nmodule.exports = createLogger();\nmodule.exports.Logger = Logger;\nmodule.exports.default = module.exports;\n\nfunction createLogger() {\n  const logger = new Logger({\n    allowUnknownLevel: true,\n    errorHandler: new RendererErrorHandler(),\n    initializeFn: () => {},\n    logId: 'default',\n    transportFactories: {\n      console: transportConsole,\n      ipc: transportIpc,\n    },\n    variables: {\n      processType: 'renderer',\n    },\n  });\n\n  logger.errorHandler.setOptions({\n    logFn({ error, errorName, showDialog }) {\n      logger.transports.console({\n        data: [errorName, error].filter(Boolean),\n        level: 'error',\n      });\n      logger.transports.ipc({\n        cmd: 'errorHandler',\n        error: {\n          cause: error?.cause,\n          code: error?.code,\n          name: error?.name,\n          message: error?.message,\n          stack: error?.stack,\n        },\n        errorName,\n        logId: logger.logId,\n        showDialog,\n      });\n    },\n  });\n\n  if (typeof window === 'object') {\n    window.addEventListener('message', (event) => {\n      const { cmd, logId, ...message } = event.data || {};\n      const instance = Logger.getInstance({ logId });\n\n      if (cmd === 'message') {\n        instance.processMessage(message, { transports: ['console'] });\n      }\n    });\n  }\n\n  // To support custom levels\n  return new Proxy(logger, {\n    get(target, prop) {\n      if (typeof target[prop] !== 'undefined') {\n        return target[prop];\n      }\n\n      return (...data) => logger.logData(data, { level: prop });\n    },\n  });\n}\n","'use strict';\n\n// eslint-disable-next-line no-console\nconst consoleError = console.error;\n\nclass RendererErrorHandler {\n  logFn = null;\n  onError = null;\n  showDialog = false;\n  preventDefault = true;\n\n  constructor({ logFn = null } = {}) {\n    this.handleError = this.handleError.bind(this);\n    this.handleRejection = this.handleRejection.bind(this);\n    this.startCatching = this.startCatching.bind(this);\n    this.logFn = logFn;\n  }\n\n  handle(error, {\n    logFn = this.logFn,\n    errorName = '',\n    onError = this.onError,\n    showDialog = this.showDialog,\n  } = {}) {\n    try {\n      if (onError?.({ error, errorName, processType: 'renderer' }) !== false) {\n        logFn({ error, errorName, showDialog });\n      }\n    } catch {\n      consoleError(error);\n    }\n  }\n\n  setOptions({ logFn, onError, preventDefault, showDialog }) {\n    if (typeof logFn === 'function') {\n      this.logFn = logFn;\n    }\n\n    if (typeof onError === 'function') {\n      this.onError = onError;\n    }\n\n    if (typeof preventDefault === 'boolean') {\n      this.preventDefault = preventDefault;\n    }\n\n    if (typeof showDialog === 'boolean') {\n      this.showDialog = showDialog;\n    }\n  }\n\n  startCatching({ onError, showDialog } = {}) {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n    this.setOptions({ onError, showDialog });\n\n    window.addEventListener('error', (event) => {\n      this.preventDefault && event.preventDefault?.();\n      this.handleError(event.error || event);\n    });\n    window.addEventListener('unhandledrejection', (event) => {\n      this.preventDefault && event.preventDefault?.();\n      this.handleRejection(event.reason || event);\n    });\n  }\n\n  handleError(error) {\n    this.handle(error, { errorName: 'Unhandled' });\n  }\n\n  handleRejection(reason) {\n    const error = reason instanceof Error\n      ? reason\n      : new Error(JSON.stringify(reason));\n    this.handle(error, { errorName: 'Unhandled rejection' });\n  }\n}\n\nmodule.exports = RendererErrorHandler;\n","'use strict';\n\n/* eslint-disable no-console */\n\nconst { transform } = require('../../../core/transforms/transform');\n\nmodule.exports = consoleTransportRendererFactory;\n\nconst consoleMethods = {\n  error: console.error,\n  warn: console.warn,\n  info: console.info,\n  verbose: console.info,\n  debug: console.debug,\n  silly: console.debug,\n  log: console.log,\n};\n\nfunction consoleTransportRendererFactory(logger) {\n  return Object.assign(transport, {\n    format: '{h}:{i}:{s}.{ms}{scope} › {text}',\n    transforms: [formatDataFn],\n\n    writeFn({ message: { level, data } }) {\n      const consoleLogFn = consoleMethods[level] || consoleMethods.info;\n\n      // make an empty call stack\n      setTimeout(() => consoleLogFn(...data));\n    },\n  });\n\n  function transport(message) {\n    transport.writeFn({\n      message: { ...message, data: transform({ logger, message, transport }) },\n    });\n  }\n}\n\nfunction formatDataFn({\n  data = [],\n  logger = {},\n  message = {},\n  transport = {},\n}) {\n  if (typeof transport.format === 'function') {\n    return transport.format({\n      data,\n      level: message?.level || 'info',\n      logger,\n      message,\n      transport,\n    });\n  }\n\n  if (typeof transport.format !== 'string') {\n    return data;\n  }\n\n  data.unshift(transport.format);\n\n  // Concatenate the first two data items to support printf-like templates\n  if (typeof data[1] === 'string' && data[1].match(/%[1cdfiOos]/)) {\n    data = [`${data[0]} ${data[1]}`, ...data.slice(2)];\n  }\n\n  const date = message.date || new Date();\n  data[0] = data[0]\n    .replace(/\\{(\\w+)}/g, (substring, name) => {\n      switch (name) {\n        case 'level': return message.level;\n        case 'logId': return message.logId;\n        case 'scope': {\n          const scope = message.scope || logger.scope?.defaultLabel;\n          return scope ? ` (${scope})` : '';\n        }\n        case 'text': return '';\n\n        case 'y': return date.getFullYear().toString(10);\n        case 'm': return (date.getMonth() + 1).toString(10)\n          .padStart(2, '0');\n        case 'd': return date.getDate().toString(10).padStart(2, '0');\n        case 'h': return date.getHours().toString(10).padStart(2, '0');\n        case 'i': return date.getMinutes().toString(10).padStart(2, '0');\n        case 's': return date.getSeconds().toString(10).padStart(2, '0');\n        case 'ms': return date.getMilliseconds().toString(10)\n          .padStart(3, '0');\n        case 'iso': return date.toISOString();\n\n        default: return message.variables?.[name] || substring;\n      }\n    })\n    .trim();\n\n  return data;\n}\n","'use strict';\n\nconst { transform } = require('../../../core/transforms/transform');\n\nmodule.exports = ipcTransportRendererFactory;\n\nconst RESTRICTED_TYPES = new Set([Promise, WeakMap, WeakSet]);\n\nfunction ipcTransportRendererFactory(logger) {\n  return Object.assign(transport, {\n    depth: 5,\n    transforms: [serializeFn],\n  });\n\n  function transport(message) {\n    if (!window.__electronLog) {\n      logger.processMessage(\n        {\n          data: ['electron-log: logger isn\\'t initialized in the main process'],\n          level: 'error',\n        },\n        { transports: ['console'] },\n      );\n      return;\n    }\n\n    try {\n      const serialized = transform({\n        initialData: message,\n        logger,\n        message,\n        transport,\n      });\n\n      __electronLog.sendToMain(serialized);\n    } catch (e) {\n      logger.transports.console({\n        data: ['electronLog.transports.ipc', e, 'data:', message.data],\n        level: 'error',\n      });\n    }\n  }\n}\n\n/**\n * Is type primitive, including null and undefined\n * @param {any} value\n * @returns {boolean}\n */\nfunction isPrimitive(value) {\n  return Object(value) !== value;\n}\n\nfunction serializeFn({\n  data,\n  depth,\n  seen = new WeakSet(),\n  transport = {},\n} = {}) {\n  const actualDepth = depth || transport.depth || 5;\n\n  if (seen.has(data)) {\n    return '[Circular]';\n  }\n\n  if (actualDepth < 1) {\n    if (isPrimitive(data)) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return '[Array]';\n    }\n\n    return `[${typeof data}]`;\n  }\n\n  if (['function', 'symbol'].includes(typeof data)) {\n    return data.toString();\n  }\n\n  if (isPrimitive(data)) {\n    return data;\n  }\n\n  // Object types\n\n  if (RESTRICTED_TYPES.has(data.constructor)) {\n    return `[${data.constructor.name}]`;\n  }\n\n  if (Array.isArray(data)) {\n    return data.map((item) => serializeFn({\n      data: item,\n      depth: actualDepth - 1,\n      seen,\n    }));\n  }\n\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n\n  if (data instanceof Error) {\n    return data.stack;\n  }\n\n  if (data instanceof Map) {\n    return new Map(\n      Array\n        .from(data)\n        .map(([key, value]) => [\n          serializeFn({ data: key, depth: actualDepth - 1, seen }),\n          serializeFn({ data: value, depth: actualDepth - 1, seen }),\n        ]),\n    );\n  }\n\n  if (data instanceof Set) {\n    return new Set(\n      Array.from(data).map(\n        (val) => serializeFn({ data: val, depth: actualDepth - 1, seen }),\n      ),\n    );\n  }\n\n  seen.add(data);\n\n  return Object.fromEntries(\n    Object.entries(data).map(\n      ([key, value]) => [\n        key,\n        serializeFn({ data: value, depth: actualDepth - 1, seen }),\n      ],\n    ),\n  );\n}\n","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { app, BrowserWindow, ipcMain, Menu, Tray, dialog, shell } from 'electron';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as childProcess from 'child_process';\nimport * as electronLog from 'electron-log';\n\n// Configure logging\nelectronLog.transports.console.level = 'debug';\nelectronLog.transports.file.level = 'debug';\nelectronLog.info('Application starting');\n\n// Store windows globally to prevent garbage collection\nlet mainWindow: BrowserWindow | null = null;\nlet tray: Tray | null = null;\nlet isQuitting = false;\n\n// Path to core binary\nconst isDevelopment = process.env.NODE_ENV !== 'production';\nconst coreExecutablePath = isDevelopment\n  ? path.join(process.cwd(), '../core/build/bin/utm-core')\n  : path.join(process.resourcesPath, 'bin/utm-core');\n\nelectronLog.info(`Core executable path: ${coreExecutablePath}`);\nelectronLog.info(`Development mode: ${isDevelopment}`);\n\n/**\n * Create the main application window\n */\nfunction createMainWindow() {\n  electronLog.info('Creating main window');\n  mainWindow = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    minWidth: 800,\n    minHeight: 600,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: path.join(__dirname, 'preload.js'),\n    },\n    show: false,\n  });\n\n  const htmlPath = path.join(__dirname, '../index.html');\n  electronLog.info(`Loading HTML from: ${htmlPath}`);\n\n  // Load main window content\n  if (isDevelopment) {\n    mainWindow.loadFile(htmlPath);\n    electronLog.info('Opening DevTools in development mode');\n    // Open DevTools in development mode\n    mainWindow.webContents.openDevTools();\n  } else {\n    mainWindow.loadFile(htmlPath);\n  }\n\n  // Show window when ready\n  mainWindow.once('ready-to-show', () => {\n    electronLog.info('Main window ready to show');\n    if (mainWindow) {\n      mainWindow.show();\n    }\n  });\n\n  // Handle window close event\n  mainWindow.on('close', (event) => {\n    electronLog.debug('Window close event triggered');\n    if (!isQuitting) {\n      electronLog.info('Hiding window instead of closing');\n      event.preventDefault();\n      if (mainWindow) {\n        mainWindow.hide();\n      }\n      return false;\n    }\n    electronLog.info('Window closing');\n    return true;\n  });\n\n  // Clean up on closed\n  mainWindow.on('closed', () => {\n    electronLog.info('Main window closed');\n    mainWindow = null;\n  });\n\n  return mainWindow;\n}\n\n/**\n * Create the system tray icon\n */\nfunction createTray() {\n  electronLog.info('Creating system tray');\n  // For development, use a simple approach\n  let iconPath = path.join(__dirname, '..', 'assets', 'icons', '16x16.png');\n  electronLog.debug(`Looking for icon at: ${iconPath}`);\n  \n  // Fallback to a system icon if our custom icon is not found\n  if (!fs.existsSync(iconPath)) {\n    const alternateIconPath = path.join(__dirname, 'assets', 'icons', '16x16.png');\n    electronLog.debug(`Primary icon not found, trying alternate path: ${alternateIconPath}`);\n    iconPath = alternateIconPath;\n    \n    // Create a directory for the icon if it doesn't exist\n    if (!fs.existsSync(path.dirname(iconPath))) {\n      electronLog.debug('Creating icon directory');\n      fs.mkdirSync(path.dirname(iconPath), { recursive: true });\n      // Touch the file to create it if it doesn't exist\n      fs.writeFileSync(iconPath, '');\n      electronLog.debug('Created empty icon file as fallback');\n    }\n  }\n  \n  electronLog.info(`Using icon from: ${iconPath}`);\n  tray = new Tray(iconPath);\n  const contextMenu = Menu.buildFromTemplate([\n    { label: 'Show Ubuntu Time Machine', click: () => { \n      electronLog.info('Tray: Show application clicked');\n      if (mainWindow) mainWindow.show(); \n    }},\n    { type: 'separator' },\n    { label: 'Perform Backup Now', click: () => { \n      electronLog.info('Tray: Perform Backup clicked');\n      sendToRenderer('trigger-backup'); \n    }},\n    { label: 'Check for Updates', click: () => {\n      electronLog.info('Tray: Check for Updates clicked');\n      checkForUpdates();\n    }},\n    { type: 'separator' },\n    { label: 'Quit', click: () => { \n      electronLog.info('Tray: Quit clicked');\n      isQuitting = true; \n      app.quit(); \n    }},\n  ]);\n\n  tray.setToolTip('Ubuntu Time Machine');\n  tray.setContextMenu(contextMenu);\n\n  tray.on('click', () => {\n    electronLog.debug('Tray icon clicked');\n    if (mainWindow) {\n      if (mainWindow.isVisible()) {\n        electronLog.info('Hiding main window from tray click');\n        mainWindow.hide();\n      } else {\n        electronLog.info('Showing main window from tray click');\n        mainWindow.show();\n      }\n    }\n  });\n\n  return tray;\n}\n\n/**\n * Send a message to the renderer process\n */\nfunction sendToRenderer(channel: string, ...args: any[]) {\n  electronLog.debug(`Sending to renderer: ${channel}`, args);\n  if (mainWindow && mainWindow.webContents) {\n    mainWindow.webContents.send(channel, ...args);\n  } else {\n    electronLog.warn(`Failed to send to renderer: ${channel} (window not available)`);\n  }\n}\n\n/**\n * Check for application updates\n */\nfunction checkForUpdates() {\n  electronLog.info('Checking for updates');\n  // Implementation of checkForUpdates function\n}\n\n// Application initialization\napp.whenReady().then(() => {\n  electronLog.info('Electron app ready');\n  createMainWindow();\n  createTray();\n\n  // Check if core binary exists\n  electronLog.debug(`Checking if core exists at: ${coreExecutablePath}`);\n  if (!fs.existsSync(coreExecutablePath)) {\n    electronLog.error(`Core binary not found at: ${coreExecutablePath}`);\n    dialog.showErrorBox(\n      'Core Component Missing',\n      `The core backup component was not found at: ${coreExecutablePath}`\n    );\n    app.quit();\n    return;\n  }\n  electronLog.info('Core binary verified');\n\n  // Set up IPC handlers\n  setupIpcHandlers();\n\n  // Check for updates on startup\n  if (!isDevelopment) {\n    electronLog.info('Scheduling update check');\n    setTimeout(checkForUpdates, 3000);\n  }\n});\n\n// Prevent multiple instances\nconst gotTheLock = app.requestSingleInstanceLock();\nif (!gotTheLock) {\n  electronLog.warn('Another instance is already running. Quitting this instance.');\n  app.quit();\n} else {\n  electronLog.info('Got single instance lock');\n  app.on('second-instance', () => {\n    electronLog.info('Second instance detected, focusing main window');\n    if (mainWindow) {\n      if (mainWindow.isMinimized()) mainWindow.restore();\n      mainWindow.show();\n      mainWindow.focus();\n    }\n  });\n}\n\n// MacOS specific behavior\napp.on('activate', () => {\n  electronLog.debug('Activate event triggered');\n  if (BrowserWindow.getAllWindows().length === 0) {\n    electronLog.info('No windows found, creating main window');\n    createMainWindow();\n  }\n});\n\n// Prepare to quit\napp.on('before-quit', () => {\n  electronLog.info('Application is preparing to quit');\n  isQuitting = true;\n});\n\n// Clean up\napp.on('quit', () => {\n  electronLog.info('Application is quitting');\n  tray = null;\n});\n\n// Set up IPC handlers for renderer communication\nfunction setupIpcHandlers() {\n  electronLog.info('Setting up IPC handlers');\n\n  // Execute core command\n  ipcMain.handle('execute-core-command', async (event, args: string[]) => {\n    electronLog.info(`Executing core command with args: ${args.join(' ')}`);\n    return new Promise((resolve, reject) => {\n      electronLog.debug(`Spawning process: ${coreExecutablePath} ${args.join(' ')}`);\n      const command = childProcess.spawn(coreExecutablePath, args);\n      \n      let stdout = '';\n      let stderr = '';\n      \n      command.stdout.on('data', (data) => {\n        const chunk = data.toString();\n        stdout += chunk;\n        electronLog.debug(`Core stdout: ${chunk.trim()}`);\n        sendToRenderer('core-command-output', chunk);\n      });\n      \n      command.stderr.on('data', (data) => {\n        const chunk = data.toString();\n        stderr += chunk;\n        electronLog.warn(`Core stderr: ${chunk.trim()}`);\n        sendToRenderer('core-command-error', chunk);\n      });\n      \n      command.on('close', (code) => {\n        electronLog.info(`Core command completed with code: ${code}`);\n        if (code === 0) {\n          electronLog.debug('Command successful');\n          resolve({ success: true, stdout, stderr });\n        } else {\n          electronLog.error(`Command failed with code ${code}`);\n          reject({ success: false, code, stdout, stderr });\n        }\n      });\n      \n      command.on('error', (error) => {\n        electronLog.error(`Error executing core command: ${error.message}`);\n        reject({ success: false, error: error.message });\n      });\n    });\n  });\n\n  // Get list of available backup profiles\n  ipcMain.handle('get-backup-profiles', async () => {\n    electronLog.info('Getting backup profiles');\n    return new Promise((resolve, reject) => {\n      electronLog.debug(`Executing: ${coreExecutablePath} --list-profiles`);\n      const command = childProcess.spawn(coreExecutablePath, ['--list-profiles']);\n      \n      let stdout = '';\n      let stderr = '';\n      \n      command.stdout.on('data', (data) => {\n        const chunk = data.toString();\n        stdout += chunk;\n        electronLog.debug(`Profile list stdout: ${chunk.trim()}`);\n      });\n      \n      command.stderr.on('data', (data) => {\n        const chunk = data.toString();\n        stderr += chunk;\n        electronLog.warn(`Profile list stderr: ${chunk.trim()}`);\n      });\n      \n      command.on('close', (code) => {\n        electronLog.info(`Profile list command completed with code: ${code}`);\n        if (code === 0) {\n          const lines = stdout.split('\\n').filter(line => line.trim().startsWith('-'));\n          const profiles = lines.map(line => line.trim().substring(2).trim());\n          electronLog.info(`Found ${profiles.length} profiles`);\n          electronLog.debug(`Profiles: ${JSON.stringify(profiles)}`);\n          resolve(profiles);\n        } else {\n          electronLog.error(`Profile list failed with code ${code}: ${stderr}`);\n          reject({ code, stderr });\n        }\n      });\n      \n      command.on('error', (error) => {\n        electronLog.error(`Error listing profiles: ${error.message}`);\n        reject(error);\n      });\n    });\n  });\n\n  // Open external URL\n  ipcMain.handle('open-external-url', async (event, url: string) => {\n    electronLog.info(`Opening external URL: ${url}`);\n    return shell.openExternal(url);\n  });\n\n  // Show open directory dialog\n  ipcMain.handle('show-open-directory-dialog', async () => {\n    electronLog.info('Showing directory selection dialog');\n    const result = await dialog.showOpenDialog({\n      properties: ['openDirectory']\n    });\n    electronLog.info(`Directory selection result: ${result.canceled ? 'canceled' : result.filePaths.join(', ')}`);\n    return result.filePaths;\n  });\n  \n  electronLog.info('IPC handlers setup complete');\n} "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","app","BrowserWindow","ipcMain","Menu","Tray","dialog","shell","path","fs","childProcess","electronLog","transports","console","level","file","info","mainWindow","tray","isQuitting","isDevelopment","process","env","NODE_ENV","coreExecutablePath","join","cwd","resourcesPath","concat","createMainWindow","width","height","minWidth","minHeight","webPreferences","nodeIntegration","contextIsolation","preload","__dirname","show","htmlPath","loadFile","webContents","openDevTools","once","on","event","debug","preventDefault","hide","createTray","iconPath","existsSync","alternateIconPath","dirname","mkdirSync","recursive","writeFileSync","contextMenu","buildFromTemplate","label","click","sendToRenderer","checkForUpdates","quit","setToolTip","setContextMenu","isVisible","channel","_len","args","Array","_key","_mainWindow$webConten","send","warn","whenReady","error","showErrorBox","setupIpcHandlers","setTimeout","gotTheLock","requestSingleInstanceLock","isMinimized","restore","focus","getAllWindows","_ref","_callee","_callee$","_context","reject","command","spawn","stdout","stderr","data","chunk","toString","trim","code","success","message","_x","_x2","_callee2","_callee2$","_context2","lines","split","filter","line","startsWith","profiles","map","substring","JSON","stringify","_ref3","_callee3","url","_callee3$","_context3","openExternal","_x3","_x4","_callee4","result","_callee4$","_context4","showOpenDialog","properties","canceled","filePaths"],"sourceRoot":""}